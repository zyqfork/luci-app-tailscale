#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: OpenWrt-Plugins-Build

on:
  repository_dispatch:
    schedule:
      - cron: "0 0 1 * *"
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
      chosen-os:
        required: true
        default: ubuntu-22.04
        type: choice
        options:
          - ubuntu-20.04
          - ubuntu-22.04
          - ubuntu-24.04
env:
  UPLOAD_PACKAGE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ${{ inputs.chosen-os || 'ubuntu-22.04'}}
    strategy:
      fail-fast: false
      matrix:
        plugin:
          - name: luci-app-tailscale
            repo: https://github.com/zyqfork/luci-app-tailscale.git
            repo_branch: main
            op_repo: https://github.com/openwrt/openwrt
            op_branch: main
          - name: luci-app-tailscale
            repo: https://github.com/zyqfork/luci-app-tailscale.git
            repo_branch: main
            op_repo: https://github.com/openwrt/openwrt
            op_branch: openwrt-23.05
          - name: luci-app-tailscale
            repo: https://github.com/zyqfork/luci-app-tailscale.git
            repo_branch: lua
            op_repo: https://github.com/coolsnowwolf/lede.git
            op_branch: main

    steps:
      - name: Before freeing up disk space
        run: |
          echo "Before freeing up disk space"
          echo "=============================================================================="
          df -hT
          echo "=============================================================================="

      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 512
          swap-size-mb: 1024
          overprovision-lvm: 'true'
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: Free up disk space complete
        run: |
          echo "Free up disk space complete"
          echo "=============================================================================="
          df -hT
          echo "=============================================================================="

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
          CHOSEN_OS: ${{ github.event.inputs.chosen-os }}
        run: |
          sudo -E apt -qq update -y
          #sudo -E apt -qq upgrade -y
          sudo -E apt -qq install $(curl -fsSL https://raw.githubusercontent.com/zouyq/openwrt-build-action/main/dep/${CHOSEN_OS}) -y
          sudo timedatectl set-timezone "$TZ"

      - name: Clone source code
        run: |
          pwd && df -hT $PWD
          git clone ${{ matrix.plugin.op_repo }} -b ${{ matrix.plugin.op_branch }} openwrt

      - name: Update and Install feeds
        run: |
          cd openwrt
          ./scripts/feeds update -a 
          ./scripts/feeds install -a

      - name: Load custom configuration
        run: |
          cd openwrt
          git clone ${{ matrix.plugin.repo }} -b ${{ matrix.plugin.repo_branch }} package/${{ matrix.plugin.name }}
          echo CONFIG_TARGET_x86=y >> .config
          echo CONFIG_TARGET_x86_64=y >> .config
          echo CONFIG_TARGET_x86_64_DEVICE_generic=y >> .config
          echo CONFIG_PACKAGE_${{ matrix.plugin.name }}=y >> .config
          sed -i '/\/etc\/init\.d\/tailscale/d;/\/etc\/config\/tailscale/d;' feeds/packages/net/tailscale/Makefile

      - name: SSH connection to Actions
        uses: lhotari/action-upterm@v1
        if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
        with:
          limit-access-to-actor: true
          wait-timeout-minutes: 5

      - name: Download package
        id: package
        run: |
          cd openwrt
          make defconfig
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile the Package
        id: compile
        run: |
          cd openwrt
          echo -e "$(nproc) thread compile"
          make -j$(nproc) || make -j1 V=s
          echo "status=success" >> $GITHUB_OUTPUT
          echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

      - name: Check space usage
        if: (!cancelled())
        run: |
          echo "Free up disk space complete"
          echo "=============================================================================="
          df -hT
          echo "=============================================================================="

      - name: Organize files
        id: organize
        if: steps.compile.outputs.status == 'success' && env.UPLOAD_PACKAGE == 'true' && !cancelled()
        run: |
          mkdir openwrt/${{ matrix.plugin.name }}-package
          mv openwrt/bin/packages/*/luci/${{ matrix.plugin.name }}* openwrt/${{ matrix.plugin.name }}-package || true
          mv openwrt/bin/packages/*/base/${{ matrix.plugin.name }}* openwrt/${{ matrix.plugin.name }}-package || true
          cd openwrt/${{ matrix.plugin.name }}-package
          echo "PACKAGE=$PWD" >> $GITHUB_ENV
          echo "PLUGIN_NAME=${{ matrix.plugin.name }}" >> $GITHUB_ENV
          echo "status=success" >> $GITHUB_OUTPUT

      - name: Upload Package directory
        uses: actions/upload-artifact@main
        if: steps.organize.outputs.status == 'success' && !cancelled()
        with:
          name: ${{ matrix.plugin.name }}${{ env.FILE_DATE }}
          path: ${{ env.PACKAGE }}

      - name: Generate release tag
        id: tag
        if: steps.organize.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
        run: |
          echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
          touch release.txt
          echo "status=success" >> $GITHUB_OUTPUT

      - name: Upload firmware to release
        uses: softprops/action-gh-release@v1
        if: steps.tag.outputs.status == 'success' && !cancelled()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ matrix.plugin.name }}_${{ steps.tag.outputs.release_tag }}
          body_path: release.txt
          files: ${{ env.PACKAGE }}/*

      - name: Delete workflow runs
        uses: GitRML/delete-workflow-runs@main
        with:
          retain_days: 1
          keep_minimum_runs: 3

      - uses: dev-drprasad/delete-older-releases@master
        with:
          keep_latest: 3
          delete_tags: true
          delete_tag_pattern: ${{ matrix.plugin.name }}_
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
